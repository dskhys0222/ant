openapi: 3.0.0
info:
  title: Coral API
  version: 1.0.0
  description: Coral API documentation
paths:
  /auth:
    get:
      summary: 認証テスト用エンドポイント
      tags:
        - auth
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Hello + ユーザー名
        '401':
          description: No token
        '403':
          description: Invalid token
  /auth/tasks:
    get:
      summary: タスク一覧取得
      tags:
        - task
      security:
        - bearerAuth: []
      responses:
        '200':
          description: タスク一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          description: 認証エラー
    post:
      summary: タスク新規作成
      tags:
        - task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encryptedData:
                  type: string
      responses:
        '201':
          description: 作成されたタスク
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: encryptedDataが未指定
        '401':
          description: 認証エラー
  /auth/tasks/{id}:
    put:
      summary: タスク更新
      tags:
        - task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: タスクID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encryptedData:
                  type: string
      responses:
        '200':
          description: 更新後のタスク
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: encryptedDataが未指定
        '401':
          description: 認証エラー
        '404':
          description: タスクが存在しない
    delete:
      summary: タスク削除
      tags:
        - task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: タスクID
      responses:
        '200':
          description: 削除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: 認証エラー
        '404':
          description: タスクが存在しない
  /public/register:
    post:
      summary: 新規ユーザー登録
      tags:
        - public
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '409':
          description: Username already exists
  /public/login:
    post:
      summary: ログイン
      tags:
        - public
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: JWTトークン
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials
components:
  schemas:
    Task:
      type: object
      properties:
        _id:
          type: string
          description: タスクID
        username:
          type: string
          description: ユーザー名
        encryptedData:
          type: string
          description: 暗号化データ
        createdAt:
          type: string
          format: date-time
          description: 作成日時
        updatedAt:
          type: string
          format: date-time
          description: 更新日時
    User:
      type: object
      properties:
        _id:
          type: string
          description: ユーザーID
        username:
          type: string
          description: ユーザー名
        password:
          type: string
          description: パスワード（ハッシュ化）
tags: []
